name: Publish to PyPI
on:
  push:
  pull_request:
    branches:
      - main
jobs:
  build:
    name: Build Distribution
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
        python -m pip install -r requirements.txt
    - name: Build distribution in binary and source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  pypi-publish:
    name: Publish release to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/CSchwabPy
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
    # retrieve your distributions here
    - name: Download distribution packages
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

    # - name: Sign the dists with Sigstore
    #   uses: sigstore/gh-action-sigstore-python@v2.1.1
    #   with:
    #     inputs: >-
    #       ./dist/*.tar.gz
    #       ./dist/*.whl
    # - name: Create GitHub Release
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
    #   run: >-
    #     gh release create
    #     '${{ github.ref_name }}'
    #     --repo '${{ github.repository }}'
    #     --notes ""
    # - name: Upload artifact signatures to GitHub Release
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
    #   # Upload to GitHub Release using the `gh` CLI.
    #   # `dist/` contains the built packages, and the
    #   # sigstore-produced signatures and certificates.
    #   run: >-
    #     gh release upload
    #     '${{ github.ref_name }}' dist/**
    #     --repo '${{ github.repository }}'
